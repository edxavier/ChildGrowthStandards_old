buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.24.4'
    }
}
plugins {
    id 'com.github.ben-manes.versions' version '0.15.0'
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

//apply plugin: 'android-apt'
apply plugin: 'realm-android'
//apply plugin: 'com.neenbedankt.android-apt'
//apply plugin: 'me.tatarka.retrolambda'


android {
    compileSdkVersion 27
    buildToolsVersion '27.0.1'

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        vectorDrawables.useSupportLibrary = true
        applicationId "com.edxavier.childgrowthstandards"
        minSdkVersion 19
        targetSdkVersion 26
        versionCode 10
        versionName "1.3.1.1711"
        multiDexEnabled true
    }
    dexOptions {

        javaMaxHeapSize "4g"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

    }

    sourceSets { main { res.srcDirs = ['src/main/res', 'src/main/res/xml'] } }
    splits {
        // Split apks on build target ABI, view all options for the splits here:
        // http://tools.android.com/tech-docs/new-build-system/user-guide/apk-splits
        abi {
            enable true
            reset()
            include 'armeabi-v7a', 'arm64-v8a', 'mips', 'x86', 'x86_64'
            universalApk false
        }
    }

}

// map for the version code that gives each ABI a value. make sure to list all ABIs mentioned in splits block, an keep the order.
ext.versionCodes = [ 'armeabi-v7a': 4, 'arm64-v8a': 5, mips: 6, 'x86': 7, 'x86_64': 8]
import com.android.build.OutputFile

// For each APK output variant, override versionCode with a combination of
// ABI APK value * 1000 + defaultConfig.versionCode
android.applicationVariants.all { variant ->
    // assign different version code for each output
    variant.outputs.each { output ->
        output.versionCodeOverride =
                project.ext.versionCodes.get(output.getFilter(OutputFile.ABI)) * 10 + android.defaultConfig.versionCode
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    //compile 'com.android.support.constraint:constraint-layout:+'

    //La uso en la splash screen

    /*compile('com.trello.rxlifecycle2:rxlifecycle-components:2.2.0') {
         exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.android.support', module: 'design'
    }*/
    //compile 'com.trello.rxlifecycle2:rxlifecycle-components:2.2.0'

    //compile 'com.android.support:palette-v7:26.0.1'
    compile 'com.android.support:appcompat-v7:27.0.0'
    compile 'com.android.support:design:27.0.0'
    compile 'com.android.support:recyclerview-v7:27.0.0'
    compile 'com.android.support:cardview-v7:27.0.0'
    //compile 'com.android.support:support-v4:26.1.0'

    compile 'com.google.firebase:firebase-core:11.4.2'
    compile 'com.google.firebase:firebase-crash:11.4.2'
    compile 'com.google.firebase:firebase-ads:11.4.2'

    compile 'com.jakewharton:butterknife:8.8.1'
    compile ('com.afollestad.material-dialogs:core:0.9.5.0') {
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.android.support', module: 'design' }

    compile 'com.github.PhilJay:MPAndroidChart:v3.0.2'
    compile 'com.github.PhilJay:MPAndroidChart-Realm:v2.0.2@aar'
    compile 'com.github.ceryle:RadioRealButton:v2.1.1'
    compile 'com.github.bumptech.glide:glide:4.3.0'
    compile 'joda-time:joda-time:2.9.9'
    compile 'de.hdodenhof:circleimageview:2.2.0'
    compile 'com.pixplicity.easyprefs:library:1.9.0@aar'

    compile 'io.reactivex.rxjava2:rxjava:2.1.6'
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    compile ('com.jakewharton.rxbinding2:rxbinding:2.0.0')
            {
                exclude group: 'com.android.support', module: 'appcompat-v7'
                exclude group: 'com.android.support', module: 'design' }
    compile ('com.jakewharton.rxbinding2:rxbinding-appcompat-v7:2.0.0')
            {
                exclude group: 'com.android.support', module: 'appcompat-v7'
                exclude group: 'com.android.support', module: 'design' }
    compile 'com.trello.rxlifecycle2:rxlifecycle:2.2.0'
    compile 'com.android.support:multidex:1.0.2'
    compile 'com.github.drawers:SpinnerDatePicker:0.0.8'
    compile 'com.mlsdev.rximagepicker:library:2.0.2'
    compile 'us.belka:androidtoggleswitch:1.2.2'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    //compile 'io.reactivex:rxjava:1.2.6'
    compile ('com.roughike:bottom-bar:2.3.1'){
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.android.support', module: 'design' }
    testCompile 'junit:junit:4.12'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.2.0'
    annotationProcessor  'com.jakewharton:butterknife-compiler:8.8.1'
    compile('com.crashlytics.sdk.android:crashlytics:2.7.1@aar') {
        transitive = true;
    }
}
apply plugin: 'com.google.gms.google-services'
